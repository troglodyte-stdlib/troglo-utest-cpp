#
# Troglobyte AppHub:
# author: Michael Gene Brockus
# gmail: <michaelbrockus@gmail.com>
#
name: Host Linux CI

#
# We have is configured so that ci_runner_linux only runs
# when source files, build scripts and this CI files is
# changed, we should not just run CI for all changes.
#
on:
  push:
    paths:
      - "**.cpp"
      - "**.hpp"
      - "**.txt"
      - "**.build"
  pull_request:
    branches:
      - "main"
      - "next"
    paths:
      - "**.cpp"
      - "**.hpp"
      - "**.txt"
      - "**.build"

permissions:
  contents: read

#
# We list all the Linux systems in a nice list so the
# DevOps team can manage them.
# 
jobs:
  #
  # ChromeOS latest host system target
  #
  host_chromeos:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: nanasess/setup-chromedriver@v1.0.8
    - run: chromedriver --url-base=/wd/hub &
    - name: Install Meson build
      run: |
        sudo apt-get install --fix-missing python3 python3-pip g++ cppcheck -y &&
        python3 -m pip install meson ninja scan-build
    - name: Setup, Compile, Scan, Tests
      run: |
        scan-build meson setup builddir -Dwith_tests=enabled &&
        scan-build meson compile -C builddir -v &&
        cppcheck --project=builddir/compile_commands.json &&
        scan-build meson test -C builddir -v
  #
  # Ubuntu latest host system target
  #
  host_ubuntu:
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/troglodyte-coder/ciimage_host_ubuntu:main"
    steps:
    - uses: actions/checkout@v3
    - name: Running CI-Image
      run: |
        scan-build meson setup builddir -Dwith_tests=enabled &&
        scan-build meson compile -C builddir -v
        cppcheck --project=builddir/compile_commands.json &&
        scan-build meson test -C builddir -v
      working-directory: .

  #
  # Debian latest host system target
  #
  host_debian:
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/troglodyte-coder/ciimage_host_debian:main"
    steps:
    - uses: actions/checkout@v3
    - name: Running CI-Image
      run: |
        scan-build meson setup builddir -Dwith_tests=enabled &&
        scan-build meson compile -C builddir -v
        cppcheck --project=builddir/compile_commands.json &&
        scan-build meson test -C builddir -v
      working-directory: .

  #
  # Fedora latest host system target
  #
  host_fedora:
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/troglodyte-coder/ciimage_host_fedora:main"
    steps:
    - uses: actions/checkout@v3
    - name: Running CI-Image
      run: |
        scan-build meson setup builddir -Dwith_tests=enabled &&
        scan-build meson compile -C builddir -v
        cppcheck --project=builddir/compile_commands.json &&
        scan-build meson test -C builddir -v
      working-directory: .

  #
  # ArchLinux latest host system target
  #
  host_archlinux:
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/troglodyte-coder/ciimage_host_archlinux:main"
    steps:
    - uses: actions/checkout@v3
    - name: Running CI-Image
      run: |
        scan-build meson setup builddir -Dwith_tests=enabled &&
        scan-build meson compile -C builddir -v
        scan-build meson test -C builddir -v
      working-directory: .

  #
  # OpenSUSE latest host system target
  #
  host_opensuse:
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/troglodyte-coder/ciimage_host_opensuse:main"
    steps:
    - uses: actions/checkout@v3
    - name: Running CI-Image
      run: |
        scan-build meson setup builddir -Dwith_tests=enabled &&
        scan-build meson compile -C builddir -v
        scan-build meson test -C builddir -v
      working-directory: .
